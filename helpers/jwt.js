const expressJwt = require("express-jwt");

function authJwt() {
  //the secret we defined in .env file help in creating token
  //based on the secret key
  //if the token used by the user is generated by secret
  //only then he will have access to api
  const secret = process.env.secret;
  const api = process.env.API_URL;

  return expressJwt({
    secret,
    algorithms: ["HS256"], //algorithm taken from jwt.io
    isRevoked: isRevoked, // reviewing/revoking the tokens under specific parameters
  }).unless({
    path: [
      //excluding the api like featured/product
      //, login to be restricted to secretJWT only for get method

      //regular expression give the flexibility
      //to use everything after the product, categories
      { url: /\/public\/uploads(.*)/, methods: ["GET", "OPTIONS"] },
      { url: /\/api\/v1\/products(.*)/, methods: ["GET", "OPTIONS"] },
      { url: /\/api\/v1\/categories(.*)/, methods: ["GET", "OPTIONS"] },
      `${api}/users/login`,
      `${api}/users/register`,
    ],
  });
}

//req is to get from the request parameters from the body
//paylod contain the data which is inside token send in the form of request headers
async function isRevoked(req, payload, done) {
  if (!payload.isAdmin) {
    done(null, true);
  }
  done();
}
module.exports = authJwt;
